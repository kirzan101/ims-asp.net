@page "/employees/create"

@using IMS.Shared.ViewModels.Pagination;
@using IMS.Shared.ViewModels.Requests;
@using IMS.WebApp.Helpers;
@inject NavigationManager NavigationManager
@inject EmployeeHelper employeeHelper

<PageTitle>Employees | Create</PageTitle>

<div class="row">
    <div class="col-lg-9">
        <h3>Create</h3>
    </div>
    <div class="col-lg-3 text-right">
        <a class="btn btn-secondary btn-sm" href="/employees" role="button">Go Back To Employee</a>
    </div>
</div>

<EditForm Model="@Employee" OnValidSubmit="@SubmitEmployee">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>First Name</label>
        <InputText class="form-control" @bind-Value="Employee.FirstName" />
        <ValidationMessage For="() => Employee.FirstName" />
    </div>
    <div class="form-group">
        <label>Middle Name</label>
        <InputText class="form-control" @bind-Value="Employee.MiddleName" />
    </div>
    <div class="form-group">
        <label>Last Name</label>
        <InputText class="form-control" @bind-Value="Employee.LastName" />
        <ValidationMessage For="() => Employee.LastName" />
    </div>
    <div class="form-group">
        <label>Mobile Number</label>
        <InputText class="form-control" @bind-Value="Employee.MobileNumber" />
    </div>
    <div class="form-group">
        <label>Designation</label>
        <InputText class="form-control" @bind-Value="Employee.Designation" />
        <ValidationMessage For="() => Employee.Designation" />
    </div>
    <div class="form-group">
        <label>Branch</label>
        <InputText class="form-control" @bind-Value="Employee.Branch" />
        <ValidationMessage For="() => Employee.Branch" />
    </div>

    <br />

    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@code {
    PagedQueryDTO dto = new PagedQueryDTO();
    public EmployeeDTO Employee { get; set; } = new EmployeeDTO();
    //[CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;

    protected override void OnInitialized()
    {
        Employee = new EmployeeDTO();
        //BlazoredModal.SetTitle("form");
    }

    private async void SubmitEmployee()
    {
        Employee.UserId = 1;

        bool result = await employeeHelper.Create(Employee);

        if (result)
        {
            NavigationManager.NavigateTo("/employees?isSuccess=" + result);
        }
        else
        {
            NavigationManager.NavigateTo("/employees?isSuccess=" + result);
        }
    }
}
