@page "/employees/update/{id:int}"

@using IMS.Shared.Models;
@using IMS.Shared.ViewModels.Pagination;
@using IMS.Shared.ViewModels.Requests;
@using IMS.WebApp.Helpers;
@using Microsoft.Extensions.Logging;
@inject NavigationManager NavigationManager
@inject EmployeeHelper employeeHelper

<PageTitle>Employees | Update</PageTitle>

@if(isSucceed)
{
    <div class="alert alert-success d-flex align-items-center" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </svg>
        <div>
            Success!
        </div>
    </div>
}

<div class="row">
    <div class="col-lg-9">
        <h3>Update</h3>
    </div>
    <div class="col-lg-3 text-right">
        <a class="btn btn-secondary btn-sm" href="/employees" role="button">Go Back To Employee</a>
    </div>
</div>

<EditForm Model="@Employee" OnValidSubmit="@SubmitEmployee">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>First Name</label>
        <InputText class="form-control" @bind-Value="Employee.FirstName" />
        <ValidationMessage For="() => Employee.FirstName" />
    </div>
    <div class="form-group">
        <label>Middle Name</label>
        <InputText class="form-control" @bind-Value="Employee.MiddleName" />
    </div>
    <div class="form-group">
        <label>Last Name</label>
        <InputText class="form-control" @bind-Value="Employee.LastName" />
        <ValidationMessage For="() => Employee.LastName" />
    </div>
    <div class="form-group">
        <label>Mobile Number</label>
        <InputText class="form-control" @bind-Value="Employee.MobileNumber" />
    </div>
    <div class="form-group">
        <label>Designation</label>
        <InputText class="form-control" @bind-Value="Employee.Designation" />
        <ValidationMessage For="() => Employee.Designation" />
    </div>
    <div class="form-group">
        <label>Branch</label>
        <InputText class="form-control" @bind-Value="Employee.Branch" />
        <ValidationMessage For="() => Employee.Branch" />
    </div>

    <br />

    <button type="submit" class="btn btn-primary">Update</button>
</EditForm>

@code {
    PagedQueryDTO dto = new PagedQueryDTO();
    //public Employee Employee { get; set; } = new Employee();
    public EmployeeDTO Employee { get; set; } = new EmployeeDTO();
    public bool isSucceed { get; set; } = false;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var result = await employeeHelper.GetEmployeeById(Id);

        Employee.FirstName = result.FirstName;
        Employee.MiddleName = result.MiddleName;
        Employee.LastName = result.LastName;
        Employee.MobileNumber = result.MobileNumber;
        Employee.Designation = result.Designation;
        Employee.Branch = result.Branch;
        Employee.UserId = 1;
    }

    private async void SubmitEmployee()
    {
        Console.WriteLine("clicked");
        //bool result = true;

        bool result = await employeeHelper.Update(Id, Employee);

        if (result)
        {
            isSucceed = result;
            //NavigationManager.NavigateTo("/employees/update/" + Id + "?isSuccess=true");
            NavigationManager.NavigateTo("/employees?isSuccess=" + result);
        }
        else
        {
            NavigationManager.NavigateTo("/employees?isSuccess=" + result);
        }
    }
}
